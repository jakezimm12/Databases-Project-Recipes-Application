{"ast":null,"code":"var _jsxFileName = \"/Users/yue0815/Documents/GitHub/cis550-project/client/src/components/RandomRecipe.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function RandomRecipe() {\n  _s();\n  const [randomRecipe, setRandomRecipe] = React.useState({});\n  React.useEffect(() => {\n    // Fetch request to get the song of the day. Fetch runs asynchronously.\n    // The .then() method is called when the fetch request is complete\n    // and proceeds to convert the result to a JSON which is finally placed in state.\n    fetch(`http://${config.server_host}:${config.server_port}/random`).then(res => res.json()).then(resJson => setRandomRecipe(resJson));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      sx: {\n        fontWeight: 700\n      },\n      gutterBottom: true,\n      children: \"Recipe of The Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"h4\",\n      children: randomRecipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"text.secondary\",\n      children: randomRecipe.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      href: \"#text-buttons\",\n      children: \"Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomRecipe, \"dKnYnb15DR2H8HQEt1ACqfvTnes=\");\n_c = RandomRecipe;\n;\nvar _c;\n$RefreshReg$(_c, \"RandomRecipe\");","map":{"version":3,"names":["React","Link","Typography","jsxDEV","_jsxDEV","config","require","RandomRecipe","_s","randomRecipe","setRandomRecipe","useState","useEffect","fetch","server_host","server_port","then","res","json","resJson","Fragment","children","component","variant","color","sx","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","name","description","Button","href","_c","$RefreshReg$"],"sources":["/Users/yue0815/Documents/GitHub/cis550-project/client/src/components/RandomRecipe.js"],"sourcesContent":["import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n\nconst config = require('../config.json');\n\nexport default function RandomRecipe() {\n  const [randomRecipe, setRandomRecipe] = React.useState({});\n\n  React.useEffect(() => {\n  // Fetch request to get the song of the day. Fetch runs asynchronously.\n  // The .then() method is called when the fetch request is complete\n  // and proceeds to convert the result to a JSON which is finally placed in state.\n  fetch(`http://${config.server_host}:${config.server_port}/random`)\n    .then(res => res.json())\n    .then(resJson => setRandomRecipe(resJson));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Typography\n        component=\"h2\"\n        variant=\"h6\"\n        color=\"primary\"\n        sx={{fontWeight: 700}}\n        gutterBottom>\n        Recipe of The Day\n      </Typography>\n      <Typography component=\"p\" variant=\"h4\">\n      {randomRecipe.name}\n      </Typography>\n      <Typography color=\"text.secondary\">\n      {randomRecipe.description}\n      </Typography>\n      <Button href=\"#text-buttons\">Link</Button>\n    </React.Fragment>\n  );\n};"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DX,KAAK,CAACY,SAAS,CAAC,MAAM;IACtB;IACA;IACA;IACAC,KAAK,CAAE,UAASR,MAAM,CAACS,WAAY,IAAGT,MAAM,CAACU,WAAY,SAAQ,CAAC,CAC/DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAIT,eAAe,CAACS,OAAO,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACJ,KAAK,CAACoB,QAAQ;IAAAC,QAAA,gBACbjB,OAAA,CAACF,UAAU;MACToB,SAAS,EAAC,IAAI;MACdC,OAAO,EAAC,IAAI;MACZC,KAAK,EAAC,SAAS;MACfC,EAAE,EAAE;QAACC,UAAU,EAAE;MAAG,CAAE;MACtBC,YAAY;MAAAN,QAAA,EAAC;IAEf;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eACb3B,OAAA,CAACF,UAAU;MAACoB,SAAS,EAAC,GAAG;MAACC,OAAO,EAAC,IAAI;MAAAF,QAAA,EACrCZ,YAAY,CAACuB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACb3B,OAAA,CAACF,UAAU;MAACsB,KAAK,EAAC,gBAAgB;MAAAH,QAAA,EACjCZ,YAAY,CAACwB;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ,eACb3B,OAAA,CAAC8B,MAAM;MAACC,IAAI,EAAC,eAAe;MAAAd,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3B;AAErB;AAACvB,EAAA,CA/BuBD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA+BnC;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}